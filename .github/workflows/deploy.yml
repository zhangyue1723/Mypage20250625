name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Deploy Directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: mkdir -p /var/www/mypage

      - name: Deploy files via rsync
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          rsync -avz --delete \
            -e "ssh -o StrictHostKeyChecking=no -i private_key.pem" \
            --exclude ".git*" \
            --exclude "node_modules" \
            --exclude ".next" \
            ./ ${{ secrets.SERVER_USER }}@${{ secrets.SSH_HOST }}:/var/www/mypage/
          rm private_key.pem

      - name: Build and Restart on Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # Navigate to the project directory
            cd /var/www/mypage

            # Aggressive cleanup to ensure a pristine environment
            echo "--- (1/8) Cleaning up old artifacts ---"
            rm -rf .next
            rm -rf node_modules
            
            # Create the production .env file
            echo "--- (2/8) Creating .env file ---"
            echo "DATABASE_URL='file:./prisma/dev.db'" > .env
            echo "JWT_SECRET='${{ secrets.JWT_SECRET }}'" >> .env
            
            # Forcefully clean the npm cache
            echo "--- (3/8) Cleaning npm cache ---"
            npm cache clean --force
            
            # Install dependencies using npm ci for deterministic builds
            echo "--- (4/8) Installing dependencies with npm ci ---"
            npm ci

            # Run prisma db push
            echo "--- (5/8) Pushing database schema ---"
            npx prisma db push

            # Build the Next.js application with explicit error handling
            echo "--- (6/8) Starting application build ---"
            npm run build
            BUILD_EXIT_CODE=$?
            echo "--- Build process finished with exit code: $BUILD_EXIT_CODE ---"

            if [ $BUILD_EXIT_CODE -ne 0 ]; then
              echo "Build failed. Aborting deployment."
              exit 1
            fi

            if [ ! -d ".next" ]; then
              echo "Build directory '.next' not found after successful build. Aborting deployment."
              exit 1
            fi
            
            # Create admin user (idempotent)
            echo "--- (7/8) Ensuring admin user exists ---"
            npm run register-admin

            # Restart the application with PM2
            echo "--- (8/8) Restarting application with PM2 ---"
            pm2 delete mypage || true
            pm2 start "npm start" --name mypage
            echo "--- Deployment finished successfully ---"
            
            # Debug login issues
            echo "--- (Debug) Checking login system ---"
            node debug-login.js
            
            # Save the process list
            pm2 save 